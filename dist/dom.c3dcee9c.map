{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.c3dcee9c.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); //template内可以有任意标签，但不会显示\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  },\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n  }, //将node2插入到node后面\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n  }, //将node2插入到node前面\r\n  append(parent, node) {\r\n    parent.appendChild(node); //在parent下加一个子节点\r\n  },\r\n  wrap(node, parent) {\r\n    dom.before(node, parent);\r\n    dom.append(parent, node);\r\n  }, //给node加一个父节点\r\n  remove(node) {\r\n    //删除node节点\r\n    node.parentNode.removeChild(node);\r\n    return node; //保留node的引用\r\n  },\r\n  empty(node) {\r\n    //node.innerHTML=''\r\n    //删除node的所有子节点\r\n    const { childNodes } = node; //等同于const childNodes =node.childNodes\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  },\r\n  attr(node, name, value) {\r\n    //在node上增加一个属性及其值(重载，根据参数个数写不同代码)\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n  text(node, string) {\r\n    //适配,将node的内容改为\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string; //ie\r\n      } else {\r\n        node.textContent = string; //firefox/chrome\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    //增加样式\r\n    if (arguments.length === 3) {\r\n      // dom.style(div, 'color', 'red')\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") {\r\n        // dom.style(div, 'color')读取style的color\r\n        return node.style[name];\r\n      } else if (name instanceof Object) {\r\n        // dom.style(div, {color: 'red'})\r\n        const object = name;\r\n        for (let key in object) {\r\n          node.style[key] = object[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    //增加/删除类\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    contains(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  }, //添加|删除事件监听\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  find(selector, scope) {\r\n    //获取标签\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  }, //获取父||子元素\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(nodeList, fn) {\r\n    //遍历所有节点\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    // 获取排行老几\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}